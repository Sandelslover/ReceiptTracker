// Generated by view binder compiler. Do not edit!
package com.receipttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.receipttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button clearDataButton;

  @NonNull
  public final Button exportDataButton;

  @NonNull
  public final Button importDataButton;

  @NonNull
  public final SwitchMaterial warrantyAlertsSwitch;

  private FragmentSettingsBinding(@NonNull ScrollView rootView, @NonNull Button clearDataButton,
      @NonNull Button exportDataButton, @NonNull Button importDataButton,
      @NonNull SwitchMaterial warrantyAlertsSwitch) {
    this.rootView = rootView;
    this.clearDataButton = clearDataButton;
    this.exportDataButton = exportDataButton;
    this.importDataButton = importDataButton;
    this.warrantyAlertsSwitch = warrantyAlertsSwitch;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear_data_button;
      Button clearDataButton = ViewBindings.findChildViewById(rootView, id);
      if (clearDataButton == null) {
        break missingId;
      }

      id = R.id.export_data_button;
      Button exportDataButton = ViewBindings.findChildViewById(rootView, id);
      if (exportDataButton == null) {
        break missingId;
      }

      id = R.id.import_data_button;
      Button importDataButton = ViewBindings.findChildViewById(rootView, id);
      if (importDataButton == null) {
        break missingId;
      }

      id = R.id.warranty_alerts_switch;
      SwitchMaterial warrantyAlertsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (warrantyAlertsSwitch == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, clearDataButton, exportDataButton,
          importDataButton, warrantyAlertsSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
